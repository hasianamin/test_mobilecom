[{"D:\\Portfolio\\test1\\src\\index.js":"1","D:\\Portfolio\\test1\\src\\redux\\reducers\\AuthReducers.jsx":"2","D:\\Portfolio\\test1\\src\\components\\Card.jsx":"3","D:\\Portfolio\\test1\\src\\redux\\actions\\index.jsx":"4","D:\\Portfolio\\test1\\src\\pages\\Home.jsx":"5","D:\\Portfolio\\test1\\src\\redux\\reducers\\UserDataReducers.jsx":"6","D:\\Portfolio\\test1\\src\\pages\\Login.jsx":"7","D:\\Portfolio\\test1\\src\\App.js":"8","D:\\Portfolio\\test1\\src\\redux\\actions\\UserDataAction.jsx":"9","D:\\Portfolio\\test1\\src\\pages\\List.jsx":"10","D:\\Portfolio\\test1\\src\\components\\Header.jsx":"11"},{"size":818,"mtime":1606998959008,"results":"12","hashOfConfig":"13"},{"size":481,"mtime":1607043933541,"results":"14","hashOfConfig":"13"},{"size":3342,"mtime":1606999015413,"results":"15","hashOfConfig":"13"},{"size":29,"mtime":1606998992391,"results":"16","hashOfConfig":"13"},{"size":6468,"mtime":1607052527177,"results":"17","hashOfConfig":"13"},{"size":1115,"mtime":1607051689821,"results":"18","hashOfConfig":"13"},{"size":4002,"mtime":1607052202862,"results":"19","hashOfConfig":"13"},{"size":1029,"mtime":1607048271778,"results":"20","hashOfConfig":"13"},{"size":100,"mtime":1607047385599,"results":"21","hashOfConfig":"13"},{"size":2403,"mtime":1607052294441,"results":"22","hashOfConfig":"13"},{"size":2000,"mtime":1607052599174,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"16dyh6v",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Portfolio\\test1\\src\\index.js",[],["48","49"],"D:\\Portfolio\\test1\\src\\redux\\reducers\\AuthReducers.jsx",["50"],"D:\\Portfolio\\test1\\src\\components\\Card.jsx",["51"],"import React, { useEffect, useState } from 'react';\nimport './../pages/style.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport Swal from 'sweetalert2'\n\nconst Card=(props)=>{\n\n    const [allData,setAllData] = useState(null)\n\n    const deleteModal=(value)=>{\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.isConfirmed) {                \n                Swal.fire(\n                    'Deleted!',\n                    'Your file has been deleted.',\n                    'success'\n                )\n            }\n            renderCard()\n        })\n    }\n\n    const editModal=()=>{\n        \n    }\n\n    useEffect(()=>{\n        setAllData(props.data)\n    },[])\n\n    const renderCard=()=>{\n        return allData.map((val,index)=>{\n            return (\n                <div className='card-container' key={index}>\n                    <div className=\"card-header\">\n                        <div className=\"card-image\">\n                            <img src={val.image} alt=\"\"/>\n                        </div>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"card-upper\">\n                            <div className=\"card-left\">\n                                <img src={val.photo} alt=\"\"/>\n                            </div>\n                            <div className=\"card-right\">\n                                <div className=\"card-user\">\n                                    <p>{val.username}</p>\n                                </div>\n                                <div className=\"card-date\">\n                                    <p>{val.date}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-lower\">\n                            <div className=\"card-title\">\n                                <h4>{val.title}</h4>\n                            </div>\n                            <div className=\"card-content\">\n                                <p>{val.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                    {\n                        val.username === props.user?\n                        <div className=\"card-modify\">\n                            <div className=\"card-edit\" onClick={()=>editModal(index)}>\n                                <FontAwesomeIcon icon={faEdit} />                        \n                            </div>\n                            <div className=\"card-delete\" onClick={()=>deleteModal(index)}>\n                                <b>X</b>\n                            </div>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            )\n        })\n    }\n\n    if(allData===null){\n        return <div>Loading</div>\n    }\n\n    return (\n        <>\n            {renderCard()}\n        </>\n    )\n}\n\nexport default Card","D:\\Portfolio\\test1\\src\\redux\\actions\\index.jsx",[],"D:\\Portfolio\\test1\\src\\pages\\Home.jsx",[],"D:\\Portfolio\\test1\\src\\redux\\reducers\\UserDataReducers.jsx",["52"],"D:\\Portfolio\\test1\\src\\pages\\Login.jsx",["53"],"D:\\Portfolio\\test1\\src\\App.js",["54"],"D:\\Portfolio\\test1\\src\\redux\\actions\\UserDataAction.jsx",[],"D:\\Portfolio\\test1\\src\\pages\\List.jsx",["55"],"D:\\Portfolio\\test1\\src\\components\\Header.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":10,"column":1,"nodeType":"62","endLine":21,"endColumn":2},{"ruleId":"63","severity":1,"message":"64","line":38,"column":7,"nodeType":"65","endLine":38,"endColumn":9,"suggestions":"66"},{"ruleId":"60","severity":1,"message":"61","line":46,"column":1,"nodeType":"62","endLine":54,"endColumn":2},{"ruleId":"63","severity":1,"message":"67","line":22,"column":7,"nodeType":"65","endLine":22,"endColumn":9,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"69","line":22,"column":5,"nodeType":"65","endLine":22,"endColumn":7,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":29,"column":5,"nodeType":"72","endLine":29,"endColumn":14,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setAllData' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'props.User'. Either include it or remove the dependency array. If 'setUserData' needs the current value of 'props.User', you can also switch to useReducer instead of useState and read 'props.User' in the reducer.",["77"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["78"],"React Hook useEffect contains a call to 'setAllData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.User] as a second argument to the useEffect Hook.","Identifier",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [props.data]",{"range":"88","text":"89"},"Update the dependencies array to be: [props.User]",{"range":"90","text":"91"},"Update the dependencies array to be: [props]",{"range":"92","text":"93"},"Add dependencies array: [props.User]",{"range":"94","text":"95"},[1050,1052],"[props.data]",[675,677],"[props.User]",[579,581],"[props]",[901,901],", [props.User]"]